Experiment: the_matrix - fair_skewcross
===================

> Running main.py...
> Running run_gurobi.sh...
Set parameter TokenServer to value "clustermaster.ac.tuwien.ac.at"
Set parameter TimeLimit to value 25200
Set parameter LogFile to value "/home1/tpiselli/fairstories/results/the_matrix_fair_skewcross_.log"
Using license file /home1/share/gurobi/gurobi.lic

Gurobi Optimizer version 11.0.1 build v11.0.1rc0 (linux64 - "Ubuntu 18.04.6 LTS")
Copyright (c) 2024, Gurobi Optimization, LLC

Read LP format model from file /home1/tpiselli/fairstories/results/the_matrix_fair_skewcross.lp
Reading time = 0.06 seconds
: 37903 rows, 10292 columns, 104873 nonzeros

CPU model: Intel(R) Xeon(R) CPU E5-2640 v4 @ 2.40GHz, instruction set [SSE2|AVX|AVX2]
Thread count: 20 physical cores, 20 logical processors, using up to 20 threads

Optimize a model with 37903 rows, 10292 columns and 104873 nonzeros
Model fingerprint: 0xe31ce357
Variable types: 1 continuous, 10291 integer (10291 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+01]
  Objective range  [1e+00, 1e+03]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 1e+00]
Presolve removed 23265 rows and 5210 columns
Presolve time: 0.11s
Presolved: 14638 rows, 5082 columns, 43938 nonzeros
Variable types: 0 continuous, 5082 integer (5081 binary)
Found heuristic solution: objective 346.0000000
Found heuristic solution: objective 297.1212121

Root relaxation: objective 0.000000e+00, 2214 iterations, 0.11 seconds (0.13 work units)

    Nodes    |    Current Node    |     Objective Bounds      |     Work
 Expl Unexpl |  Obj  Depth IntInf | Incumbent    BestBd   Gap | It/Node Time

     0     0    0.00000    0 1577  297.12121    0.00000   100%     -    0s
H    0     0                     244.0000000    0.00000   100%     -    0s
H    0     0                     242.0000000    0.00000   100%     -    0s
H    0     0                     106.3030303    0.00000   100%     -    0s
     0     0    7.58425    0 1683  106.30303    7.58425  92.9%     -    0s
H    0     0                     105.3030303    7.60959  92.8%     -    0s
H    0     0                      56.0000000    7.84068  86.0%     -    0s
     0     0    7.84068    0 1694   56.00000    7.84068  86.0%     -    0s
     0     0   10.57706    0 1762   56.00000   10.57706  81.1%     -    1s
     0     0   10.93686    0 1752   56.00000   10.93686  80.5%     -    1s
H    0     0                      31.0000000   10.97529  64.6%     -    1s
     0     0   10.97529    0 1764   31.00000   10.97529  64.6%     -    1s
     0     0   10.97660    0 1761   31.00000   10.97660  64.6%     -    1s
     0     0   13.50000    0 1761   31.00000   13.50000  56.5%     -    1s
H    0     0                      26.0000000   13.50000  48.1%     -    1s
     0     0   14.50000    0 1728   26.00000   14.50000  44.2%     -    1s
     0     0   14.50000    0 1747   26.00000   14.50000  44.2%     -    1s
     0     0   14.50000    0 1752   26.00000   14.50000  44.2%     -    1s
     0     0   14.56566    0 1753   26.00000   14.56566  44.0%     -    1s
     0     0   15.15488    0 1678   26.00000   15.15488  41.7%     -    2s
     0     0   15.15488    0 1679   26.00000   15.15488  41.7%     -    2s
     0     0   15.33333    0 1683   26.00000   15.33333  41.0%     -    2s
     0     0   15.43939    0 1684   26.00000   15.43939  40.6%     -    2s
     0     0   15.43939    0 1687   26.00000   15.43939  40.6%     -    2s
     0     0   26.00000    0 1690   26.00000   26.00000  0.00%     -    2s

Cutting planes:
  Cover: 2
  MIR: 4
  Zero half: 25
  RLT: 5

Explored 1 nodes (10023 simplex iterations) in 2.42 seconds (2.28 work units)
Thread count was 20 (of 20 available processors)

Solution count 9: 26 31 56 ... 346

Optimal solution found (tolerance 1.00e-04)
Best objective 2.600000000000e+01, best bound 2.600000000000e+01, gap 0.0000%

Wrote result file '/home1/tpiselli/fairstories/results/the_matrix_fair_skewcross.sol'

> Running mapping.py...
{0: 'TR', 1: 'AB', 2: 'AS', 3: 'AJ', 4: 'NE', 5: 'SW', 6: 'AP', 7: 'MO', 8: 'CY', 9: 'DO', 10: 'TA', 11: 'MS', 12: 'OR', 13: 'RB'}
> Running log_stats.py...
Summary for the_matrix_fair_skewcross:
=====================================
Total characters: 14
Blue characters: 11
Red characters: 3
---
> Crossings
Blue-Blue crossings: 4
Red-Red crossings: 3
Blue-Red crossings: 5
Total crossings: 12
---
> FairCrossings
BlueFair: 1.2
RedFair: 3.7
Unfairness 2.5
---
> Skewness
BlueSkew: 11
RedSkew: 3
Total skewness: 14
---
> FairSkewness
Unfairness 0.0
---
> Wiggles
Total wiggles: 0
---
> FairWiggles
BlueWiggles: 0
RedWiggles: 0
Unfairness 0.0
> All scripts executed successfully.
